#{{ -- general -------------------------------------------------------------------
set-option -g default-command zsh

#run-shell 'tmux setenv -g TMUX_DIR $(cd "$ZDOTDIR/../tmux"; pwd)'
#run-shell 'tmux setenv -g TMUX_CONF "$TMUX_DIR/tmux.conf"'


# colors!, The Tmux FAQ explicitly advises against setting TERM to anything other than screen or screen-256color
set -g default-terminal "screen-256color" 
setw -g xterm-keys on
# See if this fixes slow ESC issues.
# http://unix.stackexchange.com/questions/23138/esc-key-causes-a-small-delay-in-terminal-due-to-its-alt-behavior
set -sg escape-time 0                     # faster command sequences
set -sg repeat-time 600                   # increase repeat timeout
set -s focus-events on

set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on

set -g history-limit 5000                 # boost history
# if-shell -b '[[ "$LANG" =~ utf || "$LANG" =~ UTF || -z "$LANG" ]]' 'set -g default-command "un"' 'set -g default-command "gn"'

#}}

#{{ -- display -------------------------------------------------------------------
set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows
setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 3000      # slightly longer status messages display time

set -g status-interval 2

# Set window notifications
setw -g monitor-activity on
set -g visual-activity off

# panes {
set -g pane-active-border-fg brightred
set -g pane-border-bg colour235
set -g pane-border-fg colour238
set -g pane-active-border-bg colour236
set -g pane-active-border-fg colour51
# }

set -g terminal-overrides ',*:enacs@:smacs@:rmacs@:acsc@'

# ------- display
set -g status-bg black
set -g status-fg white
set-option -g status-justify centre
set-option -g status-left '#[bg=black,fg=green][#[fg=cyan]#S#[fg=green]] #{prefix_highlight}'
set-option -g status-left-length 20

set-option -g set-titles on
# TODO
set -g set-titles-string '#{HOSTNAME}: #{session_name}'
set -g terminal-overrides "xterm*:XT:smcup@:rmcup@"

set-window-option -g window-status-format '#[dim]#I:#[default]#W#[fg=grey,dim]'
set-window-option -g window-status-current-format '#[fg=cyan,bold]#I#[fg=blue]:#[fg=cyan]#W#[fg=dim]'

set -g status-right '#[fg=green][#[fg=cyan]%m-%d %H:%M#[fg=green]] '

############ PLUGINS
set-environment -g TMUX_PLUGIN_MANAGER_PATH "$TMUX_DIR/plugins/"

# prefix + I  : install plugins
# prefix + U  : update plugins
# set -g @plugin 'tmux-plugins/tpm'  # modified for $CONF_HOME/.tmux.conf

# prefix + Ctrl-s : save
# prefix + Ctrl-r : restore
# set -g @resurrect-dir "$CACHE_DIR/tmux-resurrect"
# set -g @resurrect-strategy-vim 'session'
# set -g @resurrect-processes 'zsh'
# set -g @resurrect-capture-pane-contents 'on'

# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'
# Last saved environment is automatically restored when tmux is started
# set -g @continuum-restore 'on'
# set -g @continuum-save-interval '15'


# prefix + /  :  regex search
# prefix + ctrl-f - simple file search
# prefix + ctrl-g - jumping over git status files (best used after git status command)
# prefix + alt-h - jumping over SHA-1 hashes (best used after git log command)
# prefix + ctrl-u - url search (http, ftp and git urls)
# prefix + ctrl-d - number search (mnemonic d, as digit)
# prefix + alt-i - ip address search
# n - jumps to the next match
# N - jumps to the previous match
##  To copy a highlighted match
# Enter - if you're using Tmux vi mode
# ctrl-w or alt-w - if you're using Tmux emacs mode
# set -g @plugin 'tmux-plugins/tmux-copycat'

#set -g @prefix_highlight_fg 'white'
#set -g @prefix_highlight_bg 'blue'
# set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

# prefix + g - prompts for session name and switches to it. Performs 'kind-of' name completion.
# Faster than the built-in prefix + s prompt for long session lists.
# prefix + C (shift + c) - prompt for creating a new session by name.
# prefix + X (shift + x) - kill current session without detaching tmux.
# prefix + S (shift + s) - switches to the last session.
# The same as built-in prefix + L that everyone seems to override with some other binding.
# prefix + @ - promote current pane into a new session.
# Analogous to how prefix + ! breaks current pane to a new window.
# set -g @plugin 'tmux-plugins/tmux-sessionist'

# <ctrl-h> => Left
# <ctrl-j> => Down
# <ctrl-k> => Up
# <ctrl-l> => Right
# <ctrl-\> => Previous split
# set -g @plugin 'christoomey/vim-tmux-navigator'

# set -g @plugin 'Morantron/tmux-fingers'
# set -g @fingers-key f
# set -g @fingers-pattern-0 '[^][(){}\u2500-\u27BF\uE000-\uF8FF \\t\\n\\r]+{4,}'
# # set -g @fingers-pattern-0 '[a-zA-Z0-9/~_][a-zA-Z0-9/~_\-:]{4,}'
# # set -g @fingers-pattern-1 '^(?!~.*youbin).*$'
# set -g @fingers-compact-hints 0
# set -g @fingers-hint-format-nocompact "#[fg=yellow,dim][%s]"
# set -g @fingers-highlight-format-nocompact "#[fg=blue,bold][%s]"

# set -g @plugin 'jbnicolai/tmux-fpp'
# set -g @fpp-key 'x'

# set -g @plugin 'laktak/extrakto'
set -g @extrakto_split_direction 'v'
set -g @extrakto_split_size 7
set -g @extrakto_key 'tab'

set -g @tpm_plugins  '       \
   tmux-plugins/tpm             \
   laktak/extrakto   \
   christoomey/vim-tmux-navigator  \
   tmux-plugins/tmux-sessionist  \
   tmux-plugins/tmux-prefix-highlight  \
'
   # tmux-plugins/tmux-resurrect  \
   # tmux-plugins/tmux-continuum  \

# tmux-prefix + I  -- install tmux plugins
# tmux-prefix + U  -- update tmux plugins
# should resource tmuxrc after update/install
run '[ -e $TMUX_DIR/plugins/tpm ] ||  git clone https://github.com/tmux-plugins/tpm $TMUX_DIR/plugins/tpm'
run "$TMUX_DIR/plugins/tpm/tpm"

# _toggle_mouse() {
#   old=$(tmux show -gv mouse)
#   new=""
#
#   if [ "$old" = "on" ]; then
#     new="off"
#   else
#     new="on"
#   fi
#
#   tmux set -g mouse $new \;\
#        display "mouse: $new"
# }

#{{ key binding
set -g prefix M-\;
unbind C-b
bind M-\; send-prefix

bind e new-window -n "$TMUX_CONF" 'sh -c "${vim:-vim} $TMUX_CONF && tmux source $TMUX_CONF && tmux display \"$TMUX_CONF sourced\""'
bind R run 'tmux source $TMUX_CONF; tmux display "$TMUX_CONF Reloaded!"'
bind r command-prompt -p "run shell:" 'splitw -c "#{pane_current_path}" -h "%%; read"'
bind m run "if [[ `tmux show-option | grep mouse.*on` ]]; then toggle=off; else toggle=on; fi; tmux display-message \"mouse tmux: \$toggle\"; tmux set-option -w mouse \$toggle &> /dev/null;"
bind  M-i run "if [[ `tmux display-message -p '#S'` = 'ipython' ]]; then tmux switch-client -l; else tmux switch-client -t ipython; fi"
unbind -n M-i
# bind -n M-o run "tmux break-pane -dn ipython"
# bind -n M-i run "tmux join-pane -vs :ipython"

######## pane/windows key
setw -g mode-keys vi

# pane navigation
bind -T copy-mode-vi C-h select-pane -L
bind -T copy-mode-vi C-j select-pane -D
bind -T copy-mode-vi C-k select-pane -U
bind -T copy-mode-vi C-l select-pane -R
bind -T copy-mode-vi C-\ select-pane -l
bind C-l send-keys 'C-l'
bind C-h send-keys 'C-h'
bind C-j send-keys 'C-j'
bind C-k send-keys 'C-k'
bind k select-pane -U
bind j select-pane -D
bind h select-pane -L
bind l select-pane -R
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one
bind -n C-0 select-window -t :=0
bind -n C-1 select-window -t :=1
bind -n C-2 select-window -t :=2
bind -n C-3 select-window -t :=3
bind -n C-4 select-window -t :=4
bind -n C-5 select-window -t :=5
bind -n C-6 select-window -t :=6
bind -n C-7 select-window -t :=7
bind -n C-8 select-window -t :=8
bind -n C-9 select-window -t :=9

bind - splitw -v -c "#{pane_current_path}" bash
bind | splitw -h -c "#{pane_current_path}" bash
bind \ splitw -h -c "#{pane_current_path}" bash
bind -n M-- splitw -v -c "#{pane_current_path}"
bind -n M-| splitw -h -c "#{pane_current_path}"
bind -n M-\ splitw -h -c "#{pane_current_path}"
bind C new-session -c "#{pane_current_path}"
bind c new-window  -c "#{pane_current_path}"
bind M-c new-window  -c "#{pane_current_path}" bash

# pane resizing
bind -r H resize-pane -L 3
bind -r J resize-pane -D 3
bind -r K resize-pane -U 3
bind -r L resize-pane -R 3


bind C-p previous-window
bind C-n next-window


bind q killp

#setw -g mode-mouse off
#setw -g mouse-select-pane off
#setw -g mouse-select-window off
#setw -g mouse-resize-pane off

# VI-style copy/paste (http://jasonwryan.com/blog/2011/06/07/copy-and-paste-in-tmux/)
# bind Escape copy-mode
# bug? todo
unbind -n M-[
bind M-[ copy-mode
unbind p
bind b list-buffers  # list paste buffers bind p paste-buffer  # paste from the top paste buffer
bind p paste-buffer
bind P choose-buffer # choose which buffer to paste from

# for tmux 2.3
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' " \
	bind -t vi-copy v begin-selection; \
	bind -t vi-copy y copy-selection; \
	bind -t vi-copy C-v rectangle-toggle; \
	bind -t vi-copy M-u halfpage-up; \
	bind -t vi-copy M-d halfpage-down; "
# for tmux 2.6
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' " \
	bind -T copy-mode-vi v send-keys -X begin-selection; \
	bind -T copy-mode-vi y send-keys -X copy-selection; \
	bind -T copy-mode-vi C-v send-keys -X rectangle-toggle; \
	bind -T copy-mode-vi M-u send-keys -X halfpage-up; \
	bind -T copy-mode-vi M-d send-keys -X halfpage-down; "

bind -n M-s choose-tree -s
bind -n M-z resize-pane -Z
bind -n M-] set -g mouse
bind -n M-= select-layout even-vertical

bind C-f command-prompt -p FIND-SESSION 'SWITCH-CLIENT -T %%'
bind C-z select-pane -t :.+ \; resize-pane -Z

# toggle synchronize-panes
bind M-x setw synchronize-panes
unbind -n n
unbind -n N

bind d detach
bind D detach -a

